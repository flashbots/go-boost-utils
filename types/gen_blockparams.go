// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package types

import (
	"encoding/json"

	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/common/hexutil"
)

var _ = (*payloadAttributesMarshalling)(nil)

// MarshalJSON marshals as JSON.
func (p PayloadAttributesV1) MarshalJSON() ([]byte, error) {
	type PayloadAttributesV1 struct {
		Timestamp             hexutil.Uint64 `json:"timestamp"`
		PrevRandao            common.Hash    `json:"prevRandao"`
		SuggestedFeeRecipient common.Address `json:"suggestedFeeRecipient"`
	}
	var enc PayloadAttributesV1
	enc.Timestamp = hexutil.Uint64(p.Timestamp)
	enc.PrevRandao = p.PrevRandao
	enc.SuggestedFeeRecipient = p.SuggestedFeeRecipient
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (p *PayloadAttributesV1) UnmarshalJSON(input []byte) error {
	type PayloadAttributesV1 struct {
		Timestamp             *hexutil.Uint64 `json:"timestamp"`
		PrevRandao            *common.Hash    `json:"prevRandao"`
		SuggestedFeeRecipient *common.Address `json:"suggestedFeeRecipient"`
	}
	var dec PayloadAttributesV1
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Timestamp != nil {
		p.Timestamp = uint64(*dec.Timestamp)
	}
	if dec.PrevRandao != nil {
		p.PrevRandao = *dec.PrevRandao
	}
	if dec.SuggestedFeeRecipient != nil {
		p.SuggestedFeeRecipient = *dec.SuggestedFeeRecipient
	}
	return nil
}
